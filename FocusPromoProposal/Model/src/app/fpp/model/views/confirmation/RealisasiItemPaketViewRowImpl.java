package app.fpp.model.views.confirmation;

import app.fpp.model.entities.confirmation.RealisasiItemPaketImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 18 16:24:13 ICT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RealisasiItemPaketViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        RealItemPaketId {
            public Object get(RealisasiItemPaketViewRowImpl obj) {
                return obj.getRealItemPaketId();
            }

            public void put(RealisasiItemPaketViewRowImpl obj, Object value) {
                obj.setRealItemPaketId((DBSequence)value);
            }
        }
        ,
        PromoProdukId {
            public Object get(RealisasiItemPaketViewRowImpl obj) {
                return obj.getPromoProdukId();
            }

            public void put(RealisasiItemPaketViewRowImpl obj, Object value) {
                obj.setPromoProdukId((Number)value);
            }
        }
        ,
        KdItemPaket {
            public Object get(RealisasiItemPaketViewRowImpl obj) {
                return obj.getKdItemPaket();
            }

            public void put(RealisasiItemPaketViewRowImpl obj, Object value) {
                obj.setKdItemPaket((String)value);
            }
        }
        ,
        Descr {
            public Object get(RealisasiItemPaketViewRowImpl obj) {
                return obj.getDescr();
            }

            public void put(RealisasiItemPaketViewRowImpl obj, Object value) {
                obj.setDescr((String)value);
            }
        }
        ,
        KdItemPaketDesc {
            public Object get(RealisasiItemPaketViewRowImpl obj) {
                return obj.getKdItemPaketDesc();
            }

            public void put(RealisasiItemPaketViewRowImpl obj, Object value) {
                obj.setKdItemPaketDesc((String)value);
            }
        }
        ,
        KodeItemPaketLov1 {
            public Object get(RealisasiItemPaketViewRowImpl obj) {
                return obj.getKodeItemPaketLov1();
            }

            public void put(RealisasiItemPaketViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(RealisasiItemPaketViewRowImpl object);

        public abstract void put(RealisasiItemPaketViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int REALITEMPAKETID = AttributesEnum.RealItemPaketId.index();
    public static final int PROMOPRODUKID = AttributesEnum.PromoProdukId.index();
    public static final int KDITEMPAKET = AttributesEnum.KdItemPaket.index();
    public static final int DESCR = AttributesEnum.Descr.index();
    public static final int KDITEMPAKETDESC = AttributesEnum.KdItemPaketDesc.index();
    public static final int KODEITEMPAKETLOV1 = AttributesEnum.KodeItemPaketLov1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RealisasiItemPaketViewRowImpl() {
    }

    /**
     * Gets RealisasiItemPaket entity object.
     * @return the RealisasiItemPaket
     */
    public RealisasiItemPaketImpl getRealisasiItemPaket() {
        return (RealisasiItemPaketImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for REAL_ITEM_PAKET_ID using the alias name RealItemPaketId.
     * @return the REAL_ITEM_PAKET_ID
     */
    public DBSequence getRealItemPaketId() {
        return (DBSequence)getAttributeInternal(REALITEMPAKETID);
    }

    /**
     * Sets <code>value</code> as attribute value for REAL_ITEM_PAKET_ID using the alias name RealItemPaketId.
     * @param value value to set the REAL_ITEM_PAKET_ID
     */
    public void setRealItemPaketId(DBSequence value) {
        setAttributeInternal(REALITEMPAKETID, value);
    }

    /**
     * Gets the attribute value for PROMO_PRODUK_ID using the alias name PromoProdukId.
     * @return the PROMO_PRODUK_ID
     */
    public Number getPromoProdukId() {
        return (Number) getAttributeInternal(PROMOPRODUKID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROMO_PRODUK_ID using the alias name PromoProdukId.
     * @param value value to set the PROMO_PRODUK_ID
     */
    public void setPromoProdukId(Number value) {
        setAttributeInternal(PROMOPRODUKID, value);
    }

    /**
     * Gets the attribute value for KD_ITEM_PAKET using the alias name KdItemPaket.
     * @return the KD_ITEM_PAKET
     */
    public String getKdItemPaket() {
        return (String) getAttributeInternal(KDITEMPAKET);
    }

    /**
     * Sets <code>value</code> as attribute value for KD_ITEM_PAKET using the alias name KdItemPaket.
     * @param value value to set the KD_ITEM_PAKET
     */
    public void setKdItemPaket(String value) {
        setAttributeInternal(KDITEMPAKET, value);
    }

    /**
     * Gets the attribute value for DESCR using the alias name Descr.
     * @return the DESCR
     */
    public String getDescr() {
        return (String) getAttributeInternal(DESCR);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCR using the alias name Descr.
     * @param value value to set the DESCR
     */
    public void setDescr(String value) {
        setAttributeInternal(DESCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute KdItemPaketDesc.
     * @return the KdItemPaketDesc
     */
    public String getKdItemPaketDesc() {
        String kdItemPaket = null;
        String kdItemPaketDesc = null;
        if (getKdItemPaket() != null) {
            kdItemPaket = getKdItemPaket();
            Row[] kdItemPaketRows;
            kdItemPaketRows = this.getKodeItemPaketLov1().getFilteredRows("Item", kdItemPaket);
            if (kdItemPaketRows.length > 0) {
                kdItemPaketDesc = (kdItemPaketRows[0].getAttribute("ItemDescription").toString()).toUpperCase();
            }
            return kdItemPaketDesc;
        } else {
            return (String) getAttributeInternal(KDITEMPAKETDESC);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute KdItemPaketDesc.
     * @param value value to set the  KdItemPaketDesc
     */
    public void setKdItemPaketDesc(String value) {
        setAttributeInternal(KDITEMPAKETDESC, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> KodeItemPaketLov1.
     */
    public RowSet getKodeItemPaketLov1() {
        return (RowSet)getAttributeInternal(KODEITEMPAKETLOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
