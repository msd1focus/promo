package app.fpp.model.views.promoproposal.duplicate;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 12 09:38:48 ICT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DuplicateTargetViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TargetId {
            public Object get(DuplicateTargetViewRowImpl obj) {
                return obj.getTargetId();
            }

            public void put(DuplicateTargetViewRowImpl obj, Object value) {
                obj.setTargetId((Number)value);
            }
        }
        ,
        PromoProdukId {
            public Object get(DuplicateTargetViewRowImpl obj) {
                return obj.getPromoProdukId();
            }

            public void put(DuplicateTargetViewRowImpl obj, Object value) {
                obj.setPromoProdukId((Number)value);
            }
        }
        ,
        Price {
            public Object get(DuplicateTargetViewRowImpl obj) {
                return obj.getPrice();
            }

            public void put(DuplicateTargetViewRowImpl obj, Object value) {
                obj.setPrice((Number)value);
            }
        }
        ,
        PriceBased {
            public Object get(DuplicateTargetViewRowImpl obj) {
                return obj.getPriceBased();
            }

            public void put(DuplicateTargetViewRowImpl obj, Object value) {
                obj.setPriceBased((String)value);
            }
        }
        ,
        PriceList {
            public Object get(DuplicateTargetViewRowImpl obj) {
                return obj.getPriceList();
            }

            public void put(DuplicateTargetViewRowImpl obj, Object value) {
                obj.setPriceList((String)value);
            }
        }
        ,
        Qty {
            public Object get(DuplicateTargetViewRowImpl obj) {
                return obj.getQty();
            }

            public void put(DuplicateTargetViewRowImpl obj, Object value) {
                obj.setQty((Number)value);
            }
        }
        ,
        Uom {
            public Object get(DuplicateTargetViewRowImpl obj) {
                return obj.getUom();
            }

            public void put(DuplicateTargetViewRowImpl obj, Object value) {
                obj.setUom((String)value);
            }
        }
        ,
        AvgQty {
            public Object get(DuplicateTargetViewRowImpl obj) {
                return obj.getAvgQty();
            }

            public void put(DuplicateTargetViewRowImpl obj, Object value) {
                obj.setAvgQty((Number)value);
            }
        }
        ,
        Value {
            public Object get(DuplicateTargetViewRowImpl obj) {
                return obj.getValue();
            }

            public void put(DuplicateTargetViewRowImpl obj, Object value) {
                obj.setValue((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(DuplicateTargetViewRowImpl object);

        public abstract void put(DuplicateTargetViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TARGETID = AttributesEnum.TargetId.index();
    public static final int PROMOPRODUKID = AttributesEnum.PromoProdukId.index();
    public static final int PRICE = AttributesEnum.Price.index();
    public static final int PRICEBASED = AttributesEnum.PriceBased.index();
    public static final int PRICELIST = AttributesEnum.PriceList.index();
    public static final int QTY = AttributesEnum.Qty.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int AVGQTY = AttributesEnum.AvgQty.index();
    public static final int VALUE = AttributesEnum.Value.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DuplicateTargetViewRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute TargetId.
     * @return the TargetId
     */
    public Number getTargetId() {
        return (Number) getAttributeInternal(TARGETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TargetId.
     * @param value value to set the  TargetId
     */
    public void setTargetId(Number value) {
        setAttributeInternal(TARGETID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PromoProdukId.
     * @return the PromoProdukId
     */
    public Number getPromoProdukId() {
        return (Number) getAttributeInternal(PROMOPRODUKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PromoProdukId.
     * @param value value to set the  PromoProdukId
     */
    public void setPromoProdukId(Number value) {
        setAttributeInternal(PROMOPRODUKID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Price.
     * @return the Price
     */
    public Number getPrice() {
        return (Number) getAttributeInternal(PRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Price.
     * @param value value to set the  Price
     */
    public void setPrice(Number value) {
        setAttributeInternal(PRICE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PriceBased.
     * @return the PriceBased
     */
    public String getPriceBased() {
        return (String) getAttributeInternal(PRICEBASED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PriceBased.
     * @param value value to set the  PriceBased
     */
    public void setPriceBased(String value) {
        setAttributeInternal(PRICEBASED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PriceList.
     * @return the PriceList
     */
    public String getPriceList() {
        return (String) getAttributeInternal(PRICELIST);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PriceList.
     * @param value value to set the  PriceList
     */
    public void setPriceList(String value) {
        setAttributeInternal(PRICELIST, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Qty.
     * @return the Qty
     */
    public Number getQty() {
        return (Number) getAttributeInternal(QTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Qty.
     * @param value value to set the  Qty
     */
    public void setQty(Number value) {
        setAttributeInternal(QTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Uom.
     * @return the Uom
     */
    public String getUom() {
        return (String) getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Uom.
     * @param value value to set the  Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }


    /**
     * Gets the attribute value for the calculated attribute AvgQty.
     * @return the AvgQty
     */
    public Number getAvgQty() {
        return (Number) getAttributeInternal(AVGQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AvgQty.
     * @param value value to set the  AvgQty
     */
    public void setAvgQty(Number value) {
        setAttributeInternal(AVGQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Value.
     * @return the Value
     */
    public Number getValue() {
        return (Number) getAttributeInternal(VALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Value.
     * @param value value to set the  Value
     */
    public void setValue(Number value) {
        setAttributeInternal(VALUE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
