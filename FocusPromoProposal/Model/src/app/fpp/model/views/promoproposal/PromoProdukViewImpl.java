package app.fpp.model.views.promoproposal;

import app.fpp.model.views.promoproposal.common.PromoProdukView;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 20 08:08:28 ICT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PromoProdukViewImpl extends ViewObjectImpl implements PromoProdukView {
    /**
     * This is the default constructor (do not remove).
     */
    public PromoProdukViewImpl() {
    }

    /**Method to revert changes of current row
     * @param curRow
     */
    public void revertChangesCurrentRow(Row curRow) {
        if (curRow != null) {
            curRow.refresh(Row.REFRESH_UNDO_CHANGES |
                           Row.REFRESH_WITH_DB_FORGET_CHANGES);
        }
    }

    /**Method to check whether row should be removed or not
     * If it is new - removed
     * If old one- Undo Changes
     * */
    public void revertOrremoveRowValues() {
        ViewObject deptVo = this;
        RowSetIterator deptIter = deptVo.createRowSetIterator(null);
        while (deptIter.hasNext()) {
            Row nextRow = deptIter.next();
            if (nextRow.getAttribute("RowStatusTrans") != null) {
                Integer rowStatus =
                    (Integer)nextRow.getAttribute("RowStatusTrans");
                if (rowStatus == 2) {
                    System.out.println("Modified Rows-" +
                                       nextRow.getAttribute("DepartmentId"));
                    revertChangesCurrentRow(nextRow);
                } else if (rowStatus == 0) {
                    nextRow.remove();
                }
            }
        }
        this.executeQuery();
    }
    
    public void removeCanceledRow() {
        ViewObject deptVo = this;
        RowSetIterator deptIter = deptVo.createRowSetIterator(null);
        while (deptIter.hasNext()) {
            Row nextRow = deptIter.next();
            if (nextRow.getAttribute("RowStatusTrans") != null) {
                Integer rowStatus =
                    (Integer)nextRow.getAttribute("RowStatusTrans");
                if (rowStatus == 0) {
                    nextRow.remove();
                }
            }
        }
        this.executeQuery();
    }
}
