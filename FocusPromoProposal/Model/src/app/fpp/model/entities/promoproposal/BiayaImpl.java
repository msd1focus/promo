package app.fpp.model.entities.promoproposal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 09 16:17:41 ICT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BiayaImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BiayaId {
            public Object get(BiayaImpl obj) {
                return obj.getBiayaId();
            }

            public void put(BiayaImpl obj, Object value) {
                obj.setBiayaId((DBSequence)value);
            }
        }
        ,
        PromoProdukId {
            public Object get(BiayaImpl obj) {
                return obj.getPromoProdukId();
            }

            public void put(BiayaImpl obj, Object value) {
                obj.setPromoProdukId((Number)value);
            }
        }
        ,
        Descr {
            public Object get(BiayaImpl obj) {
                return obj.getDescr();
            }

            public void put(BiayaImpl obj, Object value) {
                obj.setDescr((String)value);
            }
        }
        ,
        BiayaYearly {
            public Object get(BiayaImpl obj) {
                return obj.getBiayaYearly();
            }

            public void put(BiayaImpl obj, Object value) {
                obj.setBiayaYearly((Number)value);
            }
        }
        ,
        BiayaNonYearly {
            public Object get(BiayaImpl obj) {
                return obj.getBiayaNonYearly();
            }

            public void put(BiayaImpl obj, Object value) {
                obj.setBiayaNonYearly((Number)value);
            }
        }
        ,
        PromoProduk {
            public Object get(BiayaImpl obj) {
                return obj.getPromoProduk();
            }

            public void put(BiayaImpl obj, Object value) {
                obj.setPromoProduk((PromoProdukImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(BiayaImpl object);

        public abstract void put(BiayaImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BIAYAID = AttributesEnum.BiayaId.index();
    public static final int PROMOPRODUKID = AttributesEnum.PromoProdukId.index();
    public static final int DESCR = AttributesEnum.Descr.index();
    public static final int BIAYAYEARLY = AttributesEnum.BiayaYearly.index();
    public static final int BIAYANONYEARLY = AttributesEnum.BiayaNonYearly.index();
    public static final int PROMOPRODUK = AttributesEnum.PromoProduk.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BiayaImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("app.fpp.model.entities.promoproposal.Biaya");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for BiayaId, using the alias name BiayaId.
     * @return the BiayaId
     */
    public DBSequence getBiayaId() {
        return (DBSequence)getAttributeInternal(BIAYAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BiayaId.
     * @param value value to set the BiayaId
     */
    public void setBiayaId(DBSequence value) {
        setAttributeInternal(BIAYAID, value);
    }

    /**
     * Gets the attribute value for PromoProdukId, using the alias name PromoProdukId.
     * @return the PromoProdukId
     */
    public Number getPromoProdukId() {
        return (Number)getAttributeInternal(PROMOPRODUKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PromoProdukId.
     * @param value value to set the PromoProdukId
     */
    public void setPromoProdukId(Number value) {
        setAttributeInternal(PROMOPRODUKID, value);
    }

    /**
     * Gets the attribute value for Descr, using the alias name Descr.
     * @return the Descr
     */
    public String getDescr() {
        return (String)getAttributeInternal(DESCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Descr.
     * @param value value to set the Descr
     */
    public void setDescr(String value) {
        setAttributeInternal(DESCR, value);
    }

    /**
     * Gets the attribute value for BiayaYearly, using the alias name BiayaYearly.
     * @return the BiayaYearly
     */
    public Number getBiayaYearly() {
        return (Number)getAttributeInternal(BIAYAYEARLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BiayaYearly.
     * @param value value to set the BiayaYearly
     */
    public void setBiayaYearly(Number value) {
        setAttributeInternal(BIAYAYEARLY, value);
    }

    /**
     * Gets the attribute value for BiayaNonYearly, using the alias name BiayaNonYearly.
     * @return the BiayaNonYearly
     */
    public Number getBiayaNonYearly() {
        return (Number)getAttributeInternal(BIAYANONYEARLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BiayaNonYearly.
     * @param value value to set the BiayaNonYearly
     */
    public void setBiayaNonYearly(Number value) {
        setAttributeInternal(BIAYANONYEARLY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity PromoProdukImpl.
     */
    public PromoProdukImpl getPromoProduk() {
        return (PromoProdukImpl)getAttributeInternal(PROMOPRODUK);
    }

    /**
     * Sets <code>value</code> as the associated entity PromoProdukImpl.
     */
    public void setPromoProduk(PromoProdukImpl value) {
        setAttributeInternal(PROMOPRODUK, value);
    }


    /**
     * @param biayaId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence biayaId) {
        return new Key(new Object[]{biayaId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq =
            new SequenceImpl("BIAYA_SEQ", getDBTransaction());
        this.setBiayaId(new DBSequence(seq.getSequenceNumber()));
    }
}
