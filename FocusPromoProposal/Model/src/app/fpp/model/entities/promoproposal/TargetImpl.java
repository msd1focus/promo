package app.fpp.model.entities.promoproposal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 24 14:29:23 ICT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TargetImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TargetId {
            public Object get(TargetImpl obj) {
                return obj.getTargetId();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setTargetId((DBSequence)value);
            }
        }
        ,
        PromoProdukId {
            public Object get(TargetImpl obj) {
                return obj.getPromoProdukId();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setPromoProdukId((Number)value);
            }
        }
        ,
        GrowthBy {
            public Object get(TargetImpl obj) {
                return obj.getGrowthBy();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setGrowthBy((String)value);
            }
        }
        ,
        GrowthPercent {
            public Object get(TargetImpl obj) {
                return obj.getGrowthPercent();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setGrowthPercent((Number)value);
            }
        }
        ,
        TargetValue {
            public Object get(TargetImpl obj) {
                return obj.getTargetValue();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setTargetValue((Number)value);
            }
        }
        ,
        Qty {
            public Object get(TargetImpl obj) {
                return obj.getQty();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setQty((Number)value);
            }
        }
        ,
        Uom {
            public Object get(TargetImpl obj) {
                return obj.getUom();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setUom((String)value);
            }
        }
        ,
        PriceBased {
            public Object get(TargetImpl obj) {
                return obj.getPriceBased();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setPriceBased((String)value);
            }
        }
        ,
        PriceList {
            public Object get(TargetImpl obj) {
                return obj.getPriceList();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setPriceList((String)value);
            }
        }
        ,
        Price {
            public Object get(TargetImpl obj) {
                return obj.getPrice();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setPrice((Number)value);
            }
        }
        ,
        Value {
            public Object get(TargetImpl obj) {
                return obj.getValue();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setValue((Number)value);
            }
        }
        ,
        AvgQty {
            public Object get(TargetImpl obj) {
                return obj.getAvgQty();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setAvgQty((Number)value);
            }
        }
        ,
        PromoProduk {
            public Object get(TargetImpl obj) {
                return obj.getPromoProduk();
            }

            public void put(TargetImpl obj, Object value) {
                obj.setPromoProduk((PromoProdukImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(TargetImpl object);

        public abstract void put(TargetImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TARGETID = AttributesEnum.TargetId.index();
    public static final int PROMOPRODUKID = AttributesEnum.PromoProdukId.index();
    public static final int GROWTHBY = AttributesEnum.GrowthBy.index();
    public static final int GROWTHPERCENT = AttributesEnum.GrowthPercent.index();
    public static final int TARGETVALUE = AttributesEnum.TargetValue.index();
    public static final int QTY = AttributesEnum.Qty.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int PRICEBASED = AttributesEnum.PriceBased.index();
    public static final int PRICELIST = AttributesEnum.PriceList.index();
    public static final int PRICE = AttributesEnum.Price.index();
    public static final int VALUE = AttributesEnum.Value.index();
    public static final int AVGQTY = AttributesEnum.AvgQty.index();
    public static final int PROMOPRODUK = AttributesEnum.PromoProduk.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TargetImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("app.fpp.model.entities.promoproposal.Target");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for TargetId, using the alias name TargetId.
     * @return the TargetId
     */
    public DBSequence getTargetId() {
        return (DBSequence)getAttributeInternal(TARGETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TargetId.
     * @param value value to set the TargetId
     */
    public void setTargetId(DBSequence value) {
        setAttributeInternal(TARGETID, value);
    }

    /**
     * Gets the attribute value for PromoProdukId, using the alias name PromoProdukId.
     * @return the PromoProdukId
     */
    public Number getPromoProdukId() {
        return (Number)getAttributeInternal(PROMOPRODUKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PromoProdukId.
     * @param value value to set the PromoProdukId
     */
    public void setPromoProdukId(Number value) {
        setAttributeInternal(PROMOPRODUKID, value);
    }

    /**
     * Gets the attribute value for GrowthBy, using the alias name GrowthBy.
     * @return the GrowthBy
     */
    public String getGrowthBy() {
        return (String)getAttributeInternal(GROWTHBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrowthBy.
     * @param value value to set the GrowthBy
     */
    public void setGrowthBy(String value) {
        setAttributeInternal(GROWTHBY, value);
    }

    /**
     * Gets the attribute value for GrowthPercent, using the alias name GrowthPercent.
     * @return the GrowthPercent
     */
    public Number getGrowthPercent() {
        return (Number)getAttributeInternal(GROWTHPERCENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrowthPercent.
     * @param value value to set the GrowthPercent
     */
    public void setGrowthPercent(Number value) {
        setAttributeInternal(GROWTHPERCENT, value);
    }

    /**
     * Gets the attribute value for Price, using the alias name Price.
     * @return the Price
     */
    public Number getPrice() {
        return (Number)getAttributeInternal(PRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Price.
     * @param value value to set the Price
     */
    public void setPrice(Number value) {
        setAttributeInternal(PRICE, value);
    }

    /**
     * Gets the attribute value for Qty, using the alias name Qty.
     * @return the Qty
     */
    public Number getQty() {
        return (Number)getAttributeInternal(QTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Qty.
     * @param value value to set the Qty
     */
    public void setQty(Number value) {
        setAttributeInternal(QTY, value);
    }

    /**
     * Gets the attribute value for Uom, using the alias name Uom.
     * @return the Uom
     */
    public String getUom() {
        return (String)getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Uom.
     * @param value value to set the Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for TargetValue, using the alias name TargetValue.
     * @return the TargetValue
     */
    public Number getTargetValue() {
        return (Number)getAttributeInternal(TARGETVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TargetValue.
     * @param value value to set the TargetValue
     */
    public void setTargetValue(Number value) {
        setAttributeInternal(TARGETVALUE, value);
    }

    /**
     * Gets the attribute value for PriceBased, using the alias name PriceBased.
     * @return the PriceBased
     */
    public String getPriceBased() {
        return (String)getAttributeInternal(PRICEBASED);
    }

    /**
     * Sets <code>value</code> as the attribute value for PriceBased.
     * @param value value to set the PriceBased
     */
    public void setPriceBased(String value) {
        setAttributeInternal(PRICEBASED, value);
    }

    /**
     * Gets the attribute value for PriceList, using the alias name PriceList.
     * @return the PriceList
     */
    public String getPriceList() {
        return (String)getAttributeInternal(PRICELIST);
    }

    /**
     * Sets <code>value</code> as the attribute value for PriceList.
     * @param value value to set the PriceList
     */
    public void setPriceList(String value) {
        setAttributeInternal(PRICELIST, value);
    }

    /**
     * Gets the attribute value for Value, using the alias name Value.
     * @return the Value
     */
    public Number getValue() {
        return (Number)getAttributeInternal(VALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Value.
     * @param value value to set the Value
     */
    public void setValue(Number value) {
        setAttributeInternal(VALUE, value);
    }

    /**
     * Gets the attribute value for AvgQty, using the alias name AvgQty.
     * @return the AvgQty
     */
    public Number getAvgQty() {
        return (Number)getAttributeInternal(AVGQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for AvgQty.
     * @param value value to set the AvgQty
     */
    public void setAvgQty(Number value) {
        setAttributeInternal(AVGQTY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity PromoProdukImpl.
     */
    public PromoProdukImpl getPromoProduk() {
        return (PromoProdukImpl)getAttributeInternal(PROMOPRODUK);
    }

    /**
     * Sets <code>value</code> as the associated entity PromoProdukImpl.
     */
    public void setPromoProduk(PromoProdukImpl value) {
        setAttributeInternal(PROMOPRODUK, value);
    }


    /**
     * @param targetId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence targetId) {
        return new Key(new Object[]{targetId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("TARGET_SEQ", getDBTransaction());
        this.setTargetId(new DBSequence(seq.getSequenceNumber()));
    }
}
