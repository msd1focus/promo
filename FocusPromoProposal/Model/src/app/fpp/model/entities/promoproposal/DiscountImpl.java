package app.fpp.model.entities.promoproposal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 09 14:54:17 ICT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DiscountImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DiscountId {
            public Object get(DiscountImpl obj) {
                return obj.getDiscountId();
            }

            public void put(DiscountImpl obj, Object value) {
                obj.setDiscountId((DBSequence)value);
            }
        }
        ,
        PromoProdukId {
            public Object get(DiscountImpl obj) {
                return obj.getPromoProdukId();
            }

            public void put(DiscountImpl obj, Object value) {
                obj.setPromoProdukId((Number)value);
            }
        }
        ,
        TipePerhitungan {
            public Object get(DiscountImpl obj) {
                return obj.getTipePerhitungan();
            }

            public void put(DiscountImpl obj, Object value) {
                obj.setTipePerhitungan((String)value);
            }
        }
        ,
        Uom {
            public Object get(DiscountImpl obj) {
                return obj.getUom();
            }

            public void put(DiscountImpl obj, Object value) {
                obj.setUom((String)value);
            }
        }
        ,
        QtyFrom {
            public Object get(DiscountImpl obj) {
                return obj.getQtyFrom();
            }

            public void put(DiscountImpl obj, Object value) {
                obj.setQtyFrom((Number)value);
            }
        }
        ,
        QtyTo {
            public Object get(DiscountImpl obj) {
                return obj.getQtyTo();
            }

            public void put(DiscountImpl obj, Object value) {
                obj.setQtyTo((Number)value);
            }
        }
        ,
        TipePotongan {
            public Object get(DiscountImpl obj) {
                return obj.getTipePotongan();
            }

            public void put(DiscountImpl obj, Object value) {
                obj.setTipePotongan((String)value);
            }
        }
        ,
        DiscNonYearly {
            public Object get(DiscountImpl obj) {
                return obj.getDiscNonYearly();
            }

            public void put(DiscountImpl obj, Object value) {
                obj.setDiscNonYearly((Number)value);
            }
        }
        ,
        DiscYearly {
            public Object get(DiscountImpl obj) {
                return obj.getDiscYearly();
            }

            public void put(DiscountImpl obj, Object value) {
                obj.setDiscYearly((Number)value);
            }
        }
        ,
        Kelipatan {
            public Object get(DiscountImpl obj) {
                return obj.getKelipatan();
            }

            public void put(DiscountImpl obj, Object value) {
                obj.setKelipatan((Number)value);
            }
        }
        ,
        PromoProduk {
            public Object get(DiscountImpl obj) {
                return obj.getPromoProduk();
            }

            public void put(DiscountImpl obj, Object value) {
                obj.setPromoProduk((PromoProdukImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(DiscountImpl object);

        public abstract void put(DiscountImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DISCOUNTID = AttributesEnum.DiscountId.index();
    public static final int PROMOPRODUKID = AttributesEnum.PromoProdukId.index();
    public static final int TIPEPERHITUNGAN = AttributesEnum.TipePerhitungan.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int QTYFROM = AttributesEnum.QtyFrom.index();
    public static final int QTYTO = AttributesEnum.QtyTo.index();
    public static final int TIPEPOTONGAN = AttributesEnum.TipePotongan.index();
    public static final int DISCNONYEARLY = AttributesEnum.DiscNonYearly.index();
    public static final int DISCYEARLY = AttributesEnum.DiscYearly.index();
    public static final int KELIPATAN = AttributesEnum.Kelipatan.index();
    public static final int PROMOPRODUK = AttributesEnum.PromoProduk.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DiscountImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("app.fpp.model.entities.promoproposal.Discount");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DiscountId, using the alias name DiscountId.
     * @return the DiscountId
     */
    public DBSequence getDiscountId() {
        return (DBSequence)getAttributeInternal(DISCOUNTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscountId.
     * @param value value to set the DiscountId
     */
    public void setDiscountId(DBSequence value) {
        setAttributeInternal(DISCOUNTID, value);
    }

    /**
     * Gets the attribute value for PromoProdukId, using the alias name PromoProdukId.
     * @return the PromoProdukId
     */
    public Number getPromoProdukId() {
        return (Number)getAttributeInternal(PROMOPRODUKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PromoProdukId.
     * @param value value to set the PromoProdukId
     */
    public void setPromoProdukId(Number value) {
        setAttributeInternal(PROMOPRODUKID, value);
    }

    /**
     * Gets the attribute value for TipePerhitungan, using the alias name TipePerhitungan.
     * @return the TipePerhitungan
     */
    public String getTipePerhitungan() {
        return (String)getAttributeInternal(TIPEPERHITUNGAN);
    }

    /**
     * Sets <code>value</code> as the attribute value for TipePerhitungan.
     * @param value value to set the TipePerhitungan
     */
    public void setTipePerhitungan(String value) {
        setAttributeInternal(TIPEPERHITUNGAN, value);
    }

    /**
     * Gets the attribute value for Uom, using the alias name Uom.
     * @return the Uom
     */
    public String getUom() {
        return (String)getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Uom.
     * @param value value to set the Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for QtyFrom, using the alias name QtyFrom.
     * @return the QtyFrom
     */
    public Number getQtyFrom() {
        return (Number)getAttributeInternal(QTYFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for QtyFrom.
     * @param value value to set the QtyFrom
     */
    public void setQtyFrom(Number value) {
        setAttributeInternal(QTYFROM, value);
    }

    /**
     * Gets the attribute value for QtyTo, using the alias name QtyTo.
     * @return the QtyTo
     */
    public Number getQtyTo() {
        return (Number)getAttributeInternal(QTYTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for QtyTo.
     * @param value value to set the QtyTo
     */
    public void setQtyTo(Number value) {
        setAttributeInternal(QTYTO, value);
    }

    /**
     * Gets the attribute value for TipePotongan, using the alias name TipePotongan.
     * @return the TipePotongan
     */
    public String getTipePotongan() {
        return (String)getAttributeInternal(TIPEPOTONGAN);
    }

    /**
     * Sets <code>value</code> as the attribute value for TipePotongan.
     * @param value value to set the TipePotongan
     */
    public void setTipePotongan(String value) {
        setAttributeInternal(TIPEPOTONGAN, value);
    }

    /**
     * Gets the attribute value for DiscNonYearly, using the alias name DiscNonYearly.
     * @return the DiscNonYearly
     */
    public Number getDiscNonYearly() {
        return (Number)getAttributeInternal(DISCNONYEARLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscNonYearly.
     * @param value value to set the DiscNonYearly
     */
    public void setDiscNonYearly(Number value) {
        setAttributeInternal(DISCNONYEARLY, value);
    }

    /**
     * Gets the attribute value for DiscYearly, using the alias name DiscYearly.
     * @return the DiscYearly
     */
    public Number getDiscYearly() {
        return (Number)getAttributeInternal(DISCYEARLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscYearly.
     * @param value value to set the DiscYearly
     */
    public void setDiscYearly(Number value) {
        setAttributeInternal(DISCYEARLY, value);
    }

    /**
     * Gets the attribute value for Kelipatan, using the alias name Kelipatan.
     * @return the Kelipatan
     */
    public Number getKelipatan() {
        return (Number)getAttributeInternal(KELIPATAN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Kelipatan.
     * @param value value to set the Kelipatan
     */
    public void setKelipatan(Number value) {
        setAttributeInternal(KELIPATAN, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity PromoProdukImpl.
     */
    public PromoProdukImpl getPromoProduk() {
        return (PromoProdukImpl)getAttributeInternal(PROMOPRODUK);
    }

    /**
     * Sets <code>value</code> as the associated entity PromoProdukImpl.
     */
    public void setPromoProduk(PromoProdukImpl value) {
        setAttributeInternal(PROMOPRODUK, value);
    }


    /**
     * @param discountId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence discountId) {
        return new Key(new Object[]{discountId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq =
            new SequenceImpl("DISCOUNT_SEQ", getDBTransaction());
        this.setDiscountId(new DBSequence(seq.getSequenceNumber()));
    }

    @Override
    protected void doDML(int operation, TransactionEvent transactionEvent) {
       if (operation == DML_INSERT || operation == DML_UPDATE) {
            // Set null kelipatan if tidak kelipatan
            if (this.getTipePerhitungan().equalsIgnoreCase("TDKKELIPATAN")) {
                this.setKelipatan(null);
            }
        }
        super.doDML(operation, transactionEvent);
    }
}
