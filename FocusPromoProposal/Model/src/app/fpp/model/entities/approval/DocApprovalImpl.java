package app.fpp.model.entities.approval;

import app.fpp.model.entities.promoproposal.ProposalImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 05 13:56:51 ICT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DocApprovalImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DocApprovalId {
            public Object get(DocApprovalImpl obj) {
                return obj.getDocApprovalId();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setDocApprovalId((DBSequence)value);
            }
        }
        ,
        ProposalId {
            public Object get(DocApprovalImpl obj) {
                return obj.getProposalId();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setProposalId((Number)value);
            }
        }
        ,
        DocumentNo {
            public Object get(DocApprovalImpl obj) {
                return obj.getDocumentNo();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setDocumentNo((String)value);
            }
        }
        ,
        Status {
            public Object get(DocApprovalImpl obj) {
                return obj.getStatus();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        PromoDateFrom {
            public Object get(DocApprovalImpl obj) {
                return obj.getPromoDateFrom();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setPromoDateFrom((Date)value);
            }
        }
        ,
        PromoDateTo {
            public Object get(DocApprovalImpl obj) {
                return obj.getPromoDateTo();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setPromoDateTo((Date)value);
            }
        }
        ,
        Action {
            public Object get(DocApprovalImpl obj) {
                return obj.getAction();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setAction((String)value);
            }
        }
        ,
        ActionDate {
            public Object get(DocApprovalImpl obj) {
                return obj.getActionDate();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ActionBy {
            public Object get(DocApprovalImpl obj) {
                return obj.getActionBy();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Reason {
            public Object get(DocApprovalImpl obj) {
                return obj.getReason();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setReason((String)value);
            }
        }
        ,
        RoleName {
            public Object get(DocApprovalImpl obj) {
                return obj.getRoleName();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setRoleName((String)value);
            }
        }
        ,
        Region {
            public Object get(DocApprovalImpl obj) {
                return obj.getRegion();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setRegion((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(DocApprovalImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CreationDate {
            public Object get(DocApprovalImpl obj) {
                return obj.getCreationDate();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(DocApprovalImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(DocApprovalImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AprvlCode {
            public Object get(DocApprovalImpl obj) {
                return obj.getAprvlCode();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setAprvlCode((String)value);
            }
        }
        ,
        Proposal {
            public Object get(DocApprovalImpl obj) {
                return obj.getProposal();
            }

            public void put(DocApprovalImpl obj, Object value) {
                obj.setProposal((ProposalImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(DocApprovalImpl object);

        public abstract void put(DocApprovalImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCAPPROVALID = AttributesEnum.DocApprovalId.index();
    public static final int PROPOSALID = AttributesEnum.ProposalId.index();
    public static final int DOCUMENTNO = AttributesEnum.DocumentNo.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int PROMODATEFROM = AttributesEnum.PromoDateFrom.index();
    public static final int PROMODATETO = AttributesEnum.PromoDateTo.index();
    public static final int ACTION = AttributesEnum.Action.index();
    public static final int ACTIONDATE = AttributesEnum.ActionDate.index();
    public static final int ACTIONBY = AttributesEnum.ActionBy.index();
    public static final int REASON = AttributesEnum.Reason.index();
    public static final int ROLENAME = AttributesEnum.RoleName.index();
    public static final int REGION = AttributesEnum.Region.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int APRVLCODE = AttributesEnum.AprvlCode.index();
    public static final int PROPOSAL = AttributesEnum.Proposal.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DocApprovalImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("app.fpp.model.entities.approval.DocApproval");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DocApprovalId, using the alias name DocApprovalId.
     * @return the DocApprovalId
     */
    public DBSequence getDocApprovalId() {
        return (DBSequence)getAttributeInternal(DOCAPPROVALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocApprovalId.
     * @param value value to set the DocApprovalId
     */
    public void setDocApprovalId(DBSequence value) {
        setAttributeInternal(DOCAPPROVALID, value);
    }

    /**
     * Gets the attribute value for ProposalId, using the alias name ProposalId.
     * @return the ProposalId
     */
    public Number getProposalId() {
        return (Number)getAttributeInternal(PROPOSALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProposalId.
     * @param value value to set the ProposalId
     */
    public void setProposalId(Number value) {
        setAttributeInternal(PROPOSALID, value);
    }

    /**
     * Gets the attribute value for DocumentNo, using the alias name DocumentNo.
     * @return the DocumentNo
     */
    public String getDocumentNo() {
        return (String)getAttributeInternal(DOCUMENTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocumentNo.
     * @param value value to set the DocumentNo
     */
    public void setDocumentNo(String value) {
        setAttributeInternal(DOCUMENTNO, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for PromoDateFrom, using the alias name PromoDateFrom.
     * @return the PromoDateFrom
     */
    public Date getPromoDateFrom() {
        return (Date)getAttributeInternal(PROMODATEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for PromoDateFrom.
     * @param value value to set the PromoDateFrom
     */
    public void setPromoDateFrom(Date value) {
        setAttributeInternal(PROMODATEFROM, value);
    }

    /**
     * Gets the attribute value for PromoDateTo, using the alias name PromoDateTo.
     * @return the PromoDateTo
     */
    public Date getPromoDateTo() {
        return (Date)getAttributeInternal(PROMODATETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PromoDateTo.
     * @param value value to set the PromoDateTo
     */
    public void setPromoDateTo(Date value) {
        setAttributeInternal(PROMODATETO, value);
    }

    /**
     * Gets the attribute value for Action, using the alias name Action.
     * @return the Action
     */
    public String getAction() {
        return (String)getAttributeInternal(ACTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Action.
     * @param value value to set the Action
     */
    public void setAction(String value) {
        setAttributeInternal(ACTION, value);
    }

    /**
     * Gets the attribute value for ActionDate, using the alias name ActionDate.
     * @return the ActionDate
     */
    public Date getActionDate() {
        return (Date)getAttributeInternal(ACTIONDATE);
    }

    /**
     * Gets the attribute value for ActionBy, using the alias name ActionBy.
     * @return the ActionBy
     */
    public String getActionBy() {
        return (String)getAttributeInternal(ACTIONBY);
    }

    /**
     * Gets the attribute value for Reason, using the alias name Reason.
     * @return the Reason
     */
    public String getReason() {
        return (String)getAttributeInternal(REASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Reason.
     * @param value value to set the Reason
     */
    public void setReason(String value) {
        setAttributeInternal(REASON, value);
    }

    /**
     * Gets the attribute value for RoleName, using the alias name RoleName.
     * @return the RoleName
     */
    public String getRoleName() {
        return (String)getAttributeInternal(ROLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for RoleName.
     * @param value value to set the RoleName
     */
    public void setRoleName(String value) {
        setAttributeInternal(ROLENAME, value);
    }

    /**
     * Gets the attribute value for Region, using the alias name Region.
     * @return the Region
     */
    public String getRegion() {
        return (String)getAttributeInternal(REGION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Region.
     * @param value value to set the Region
     */
    public void setRegion(String value) {
        setAttributeInternal(REGION, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Gets the attribute value for AprvlCode, using the alias name AprvlCode.
     * @return the AprvlCode
     */
    public String getAprvlCode() {
        return (String)getAttributeInternal(APRVLCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AprvlCode.
     * @param value value to set the AprvlCode
     */
    public void setAprvlCode(String value) {
        setAttributeInternal(APRVLCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity app.fpp.model.entities.promoproposal.ProposalImpl.
     */
    public ProposalImpl getProposal() {
        return (ProposalImpl)getAttributeInternal(PROPOSAL);
    }

    /**
     * Sets <code>value</code> as the associated entity app.fpp.model.entities.promoproposal.ProposalImpl.
     */
    public void setProposal(ProposalImpl value) {
        setAttributeInternal(PROPOSAL, value);
    }


    /**
     * @param docApprovalId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence docApprovalId) {
        return new Key(new Object[]{docApprovalId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("DOC_APPROVAL_SEQ", getDBTransaction());
        this.setDocApprovalId(new DBSequence(seq.getSequenceNumber()));
    }
}
