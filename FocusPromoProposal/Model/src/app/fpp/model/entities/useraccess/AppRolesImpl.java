package app.fpp.model.entities.useraccess;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 14 06:58:04 ICT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppRolesImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Id {
            public Object get(AppRolesImpl obj) {
                return obj.getId();
            }

            public void put(AppRolesImpl obj, Object value) {
                obj.setId((DBSequence)value);
            }
        }
        ,
        Name {
            public Object get(AppRolesImpl obj) {
                return obj.getName();
            }

            public void put(AppRolesImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        Descr {
            public Object get(AppRolesImpl obj) {
                return obj.getDescr();
            }

            public void put(AppRolesImpl obj, Object value) {
                obj.setDescr((String)value);
            }
        }
        ,
        Label {
            public Object get(AppRolesImpl obj) {
                return obj.getLabel();
            }

            public void put(AppRolesImpl obj, Object value) {
                obj.setLabel((String)value);
            }
        }
        ,
        RoleType {
            public Object get(AppRolesImpl obj) {
                return obj.getRoleType();
            }

            public void put(AppRolesImpl obj, Object value) {
                obj.setRoleType((String)value);
            }
        }
        ,
        AppRoleMenuItems {
            public Object get(AppRolesImpl obj) {
                return obj.getAppRoleMenuItems();
            }

            public void put(AppRolesImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(AppRolesImpl object);

        public abstract void put(AppRolesImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int DESCR = AttributesEnum.Descr.index();
    public static final int LABEL = AttributesEnum.Label.index();
    public static final int ROLETYPE = AttributesEnum.RoleType.index();
    public static final int APPROLEMENUITEMS = AttributesEnum.AppRoleMenuItems.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppRolesImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("app.fpp.model.entities.useraccess.AppRoles");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public DBSequence getId() {
        return (DBSequence)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Name, using the alias name Name.
     * @return the Name
     */
    public String getName() {
        return (String)getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Name.
     * @param value value to set the Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for Descr, using the alias name Descr.
     * @return the Descr
     */
    public String getDescr() {
        return (String)getAttributeInternal(DESCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Descr.
     * @param value value to set the Descr
     */
    public void setDescr(String value) {
        setAttributeInternal(DESCR, value);
    }

    /**
     * Gets the attribute value for Label, using the alias name Label.
     * @return the Label
     */
    public String getLabel() {
        return (String)getAttributeInternal(LABEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Label.
     * @param value value to set the Label
     */
    public void setLabel(String value) {
        setAttributeInternal(LABEL, value);
    }

    /**
     * Gets the attribute value for RoleType, using the alias name RoleType.
     * @return the RoleType
     */
    public String getRoleType() {
        return (String)getAttributeInternal(ROLETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RoleType.
     * @param value value to set the RoleType
     */
    public void setRoleType(String value) {
        setAttributeInternal(ROLETYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppRoleMenuItems() {
        return (RowIterator)getAttributeInternal(APPROLEMENUITEMS);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence id) {
        return new Key(new Object[]{id});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("APP_ROLES_SEQ", getDBTransaction());
        this.setId(new DBSequence(seq.getSequenceNumber()));
    }
}
