package app.fpp.model.am;


import app.fpp.adfextensions.CustomApplicationModuleImpl;
import app.fpp.model.am.common.SecurityAM;
import app.fpp.model.views.useraccessmenu.UserAccessRolesViewImpl;
import java.util.HashMap;
import java.util.Map;
import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Apr 28 08:14:40 ICT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SecurityAMImpl extends CustomApplicationModuleImpl implements SecurityAM {
    /**
     * This is the default constructor (do not remove).
     */
    public SecurityAMImpl() {
    }

    /**
     * Function to find user row by login and password
     * @return map with user data and list of privileges
     */
    public Map authenticateUser(String userLogin, String userPassword) {
        
        Map userData = new HashMap();
        HashMap userAccess = new HashMap();
        
        ViewObjectImpl user = this.getUserAccessView1();
        user.setMaxFetchSize(1);
        user.setNamedWhereClauseParam("userLogin", userLogin);
        /* ENCRYPTED */
        //user.setNamedWhereClauseParam("userPassword",DigestUtils.sha1Hex(userPassword));
        
        /* NOT ENCRYPTED */
        user.setNamedWhereClauseParam("userPassword",userPassword);
        
        user.executeQuery();

        if (user.getEstimatedRowCount() > 0) {

            Row userRow = user.first();
            String fullName = (String)userRow.getAttribute("FullName");
            String userNameLogin = (String)userRow.getAttribute("UserName");
            String title = (String)userRow.getAttribute("Title");
            String contactNo = (String)userRow.getAttribute("ContactNo");
            String companyId = (String)userRow.getAttribute("CompanyId");
            String accessStatus = (String)userRow.getAttribute("AccessStatus");
            String userType = (String)userRow.getAttribute("UserType");
            String userInitial = (String)userRow.getAttribute("UserInitial");
            String userDivision = (String)userRow.getAttribute("UserDivision");
            userData.put("FullName", fullName);
            userData.put("Password", userPassword);
            userData.put("UserName", userNameLogin);
            userData.put("Title", title);
            userData.put("ContactNo", contactNo);
            userData.put("CompanyId", companyId);
            userData.put("AccessStatus", accessStatus);
            userData.put("UserType", userType);
            userData.put("UserInitial", userInitial);
            userData.put("UserDivision", userDivision);
            setToSession("UserId", userLogin); // Save Login ID to BC session
            
            //Retrive User Roles
            UserAccessRolesViewImpl groupOfRoles;
            groupOfRoles = getUserAccessRolesView1();
            groupOfRoles.setNamedWhereClauseParam("userNameLogin", userNameLogin);
            groupOfRoles.executeQuery();
            
            while (groupOfRoles.hasNext()) {
                Row privsRow = groupOfRoles.next();
                String roleName = (String)privsRow.getAttribute("Role");
                String userName = (String)privsRow.getAttribute("UserName");
                userAccess.put(roleName, userName);
                userData.put("UserRole", roleName);  
            }
            
            userData.put("UserAccess", userAccess);
            
        } else {
            userData.put("FullName", "");
            userData.put("Password", "");
            userData.put("UserName", "");
            userData.put("Title", "");
        }

        return userData;
    }


    /**
     * Container's getter for UserAccessView1.
     * @return UserAccessView1
     */
    public ViewObjectImpl getUserAccessView1() {
        return (ViewObjectImpl)findViewObject("UserAccessView1");
    }

    /**
     * Container's getter for MenuItemsView1.
     * @return MenuItemsView1
     */
    public ViewObjectImpl getMenuItemsView1() {
        return (ViewObjectImpl)findViewObject("MenuItemsView1");
    }

    /**
     * Container's getter for UserAccessRolesView1.
     * @return UserAccessRolesView1
     */
    public UserAccessRolesViewImpl getUserAccessRolesView1() {
        return (UserAccessRolesViewImpl)findViewObject("UserAccessRolesView1");
    }
}
